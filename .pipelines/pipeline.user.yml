version:
  name: 'AzureDiskInspect'                                                 # The uber name to attach to the artifacts generated by this pipeline.
                                                                        # Currently unused, but will be used in the future to refer to the 
                                                                        # artifacts as a group by name.
  major: 1                                                              # The major version number.
  minor: 0                                                              # The minor version number
  tag: 'alpha'                                                          # Tag to use for semantic versioning.
  system: 'patch'                                                       # Versioning scheme to use.
                                                                        # patch         - 1.0.MMddyyrrrr will be generated
                                                                        # buildrevision - 1.0.MMddyy.rrrr will be generated.

workspace_options:
  enable_service_tree_acr_path: true

artifact_publish_options:                  # Metadata section
  publish_to_legacy_artifacts: true            # Default is always true
  publish_to_pipeline_artifacts: false         # Default is always false
  publish_to_cloudvault_artifacts: true        # Default is always true


# An optional user defined stage for performing packaging. This exists as a separate stage because some build processes do a
# compile-sign-package-sign model. For example, Windows based builds use this model. Linux builds typically follow a
# compile-hash-package-hash-sign hash model. For those folks, package may not need to exist as a separate step.
# Eventually, network access will be limited or cut-off in this stage.
package:
  commands:
      # Docker build InspectDisk image
      - !!dockerbuildcommand
          name: 'Build Credscan Image'
          context_folder: '.'
          dockerfile_name: 'Dockerfile'
          repository_name: 'azdis/diskinspect'
          publish: true
          publish_build_tag: true
          metadata_file:
          artifact_path: 'images/AzdisDiskInspect.json' 
            
# An optional user defined stage for running tests that need network access. Note that unit tests and others that do not need network access
# can be run in build or package stages itself. Any artifacts built in this stage will be separated out and will not be signed.
# However, we recommend that tests always be run in the test stage.
# Eventually, we may even skip test artifacts completely.
test:
  commands:

# An optional, interim user defined stage for performing publishing of the build. Examples include, dropping the files to a network share,
# pushing packages to a package repository, uploading binaries to blob store etc. 
# Eventually, network access in this stage will be restricted to dev-feeds only for non-official builds. We may remove this stage for official
# builds. Teams should use VSRM or Ev2 to release.
publish:
  commands: 

# An optional user defined stage for running any type of always-needed uber cleanup. This exists as a separate stage because some build
# processes acquire shared resources during some stages. In case the build is cancelled or aborted or fails, this stage is provided so that
# these resources can be unacquired. In particular, the commands in this stage are always run.
user_cleanup:
  commands:
  
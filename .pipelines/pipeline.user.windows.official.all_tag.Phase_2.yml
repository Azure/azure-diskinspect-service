# Inherits pipeline.user.yml
# Used in official build windows.

# Overriding environment metadata to windows specific.
environment:
  host:
    os: 'windows'
  runtime:
    provider: 'appcontainer'
    image: 'cdpxwin1809.azurecr.io/global/vse2019:latest-official-1541930-fa3603cd'
    source_mode: 'link'

# Adding signing support.
signing_options:
  profile: 'internal_azure_service'

workspace_options:
  download_current_artifacts: true         # Default is always false
  enable_service_tree_acr_path: true

# An optional user defined stage for performing any compilation, code generation etc.
# All files in the artifacts sections will be collected, saved off and signed.
# The signed files will be restored back to the original locations before the next stage is invoked.
# Eventually, network access will be limited or cut-off in this stage.
# Build project
build:
  commands:
    # NO OP

# An optional user defined stage for performing packaging. This exists as a separate stage because some build processes do a
# compile-sign-package-sign model. For example, Windows based builds use this model. Linux builds typically follow a
# compile-hash-package-hash-sign hash model. For those folks, package may not need to exist as a separate step.
# Eventually, network access will be limited or cut-off in this stage.
package:
  commands:
      # NO OP
            
# An optional user defined stage for running tests that need network access. Note that unit tests and others that do not need network access
# can be run in build or package stages itself. Any artifacts built in this stage will be separated out and will not be signed.
# However, we recommend that tests always be run in the test stage.
# Eventually, we may even skip test artifacts completely.
test:
  commands:

# An optional, interim user defined stage for performing publishing of the build. Examples include, dropping the files to a network share,
# pushing packages to a package repository, uploading binaries to blob store etc. 
# Eventually, network access in this stage will be restricted to dev-feeds only for non-official builds. We may remove this stage for official
# builds. Teams should use VSRM or Ev2 to release.
publish:
  commands:

# An optional user defined stage for running any type of always-needed uber cleanup. This exists as a separate stage because some build
# processes acquire shared resources during some stages. In case the build is cancelled or aborted or fails, this stage is provided so that
# these resources can be unacquired. In particular, the commands in this stage are always run.
user_cleanup:
  commands:
  